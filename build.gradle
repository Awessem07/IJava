plugins {
    id 'java'
    id 'maven-publish'
    id('com.github.hierynomus.license') version '0.14.0'
    id('io.github.spencerpark.jupyter-kernel-installer') version '1.1.5'
    id('com.github.jk1.dependency-license-report')
}

import org.apache.tools.ant.filters.ReplaceTokens
import com.github.jk1.license.render.*
import com.github.jk1.license.filter.*
import io.github.spencerpark.gradle.*

group = 'io.github.spencerpark'
version = '1.1.0-SNAPSHOT'

wrapper {
    gradleVersion = '4.8.1'
}

// Add the license header to source files
license {
    header = file('LICENSE')
    exclude '**/*.json'
    mapping {
        // Use a regular multiline comment rather than a javadoc comment
        java = 'SLASHSTAR_STYLE'
    }
}
build.dependsOn 'licenseFormat'

// Configures the license report generated for the dependencies.
licenseReport {
    excludeGroups = []
    renderers = [
            // Generate a pretty HTML report that groups dependencies by their license.
            new NewInventoryHtmlReportRenderer('dependencies.html'),
            new InventoryHtmlReportRenderer('deps.html'),
            new TextReportRenderer('dependencies.txt'),
            // TODO make sure ci verifies that all licenses are know to be allowed to redistribute before publishing
            new JsonReportRenderer('dependencies.json')
    ]

    // Group same licenses despite names being slightly different (ex. Apache 2.0 vs Apache version 2)
    filters = [new LicenseBundleNormalizer()]

    // Include the report for shaded dependencies as these are what will be redistributed
    // and therefore must go in the report which will also be distributed.
    configurations = ['shade']
}

compileJava {
    sourceCompatibility = 1.9
    targetCompatibility = 1.9
}

configurations {
    shade
    // transitive true to make sure that the dependencies of shade dependencies also get shaded
    // into the jar
    shade.transitive = true
    compile.extendsFrom(shade)
}

repositories {
    maven {
        url = 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
    mavenCentral()
    mavenLocal()
}

dependencies {
    shade group: 'io.github.spencerpark', name: 'jupyter-jvm-basekernel', version: '2.2.1-SNAPSHOT'
    shade group: 'org.jboss.shrinkwrap.resolver', name: 'shrinkwrap-resolver-impl-maven', version: '3.1.3'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    //Include all shaded dependencies in the jar
    from configurations.shade
            .collect {it.isDirectory() ? it : zipTree(it)}

    manifest {
        attributes('Main-class': 'io.github.spencerpark.ijava.IJava')
    }
}

processResources {
    def tokens = [
            'version': project.version,
            'project': project.name
    ]
    inputs.properties(tokens)
    filter ReplaceTokens, tokens: tokens
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

jupyter {
    kernelName = 'java'
    kernelDisplayName = 'Java'
    kernelLanguage = 'java'
    kernelInterruptMode = 'message'
}